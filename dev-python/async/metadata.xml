<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
	<herd>no-herd</herd>
	<maintainer>
		<email>jnrowe@gmail.com</email>
		<name>James Rowe</name>
	</maintainer>
	<longdescription lang="en">
		Async is one more attempt to make the definition and execution of
		asynchronous interdependent operations easy. For that to work, you may
		define tasks which communicate with each other by channels. Channels
		transfer items, which is very similar to bytes flowing through pipes
		uses in inter-process communication. Items will only be generated on
		demand, that is when you read from the respective output channel.

		As it turned out, the GIL is far more restricting than initially
		thought, which effectively means true concurrency can only be obtained
		during input output to files and sockets, as well as specifically
		written versions of existing c python extensions which release the GIL
		before lengthy operations. Many of the currently available c extensions,
		such as zlib, lock everything down to just one thread at a time, even
		though this isnâ€™t a strict technical requirement.
	</longdescription>
	<upstream>
		<doc lang="en">http://packages.python.org/async</doc>
		<remote-id type="pypi">async</remote-id>
		<changelog>http://packages.python.org/async/changes.html</changelog>
	</upstream>
</pkgmetadata>
